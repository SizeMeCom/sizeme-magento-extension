<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category  SizeMe
 * @package   SizeMe_Measurements
 * @author    SizeMe Ltd <plugins@sizeme.com>
 * @copyright Copyright (c) 2017 SizeMe Ltd (https://www.sizeme.com/)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
?>

<?php
/**
 * @var $this SizeMe_Measurements_Block_Catalog_Product_View_Externals
 */

?>

<script type="text/javascript">
//<![CDATA[
var sizeme_options = {
	service_status: "<?php echo $this->jsQuoteEscape($this->getServiceStatus()); ?>",
	buttonize: "<?php echo $this->jsQuoteEscape($this->getCustomSizeSelection()); ?>",
	pluginVersion: "<?php echo $this->getModuleVersion(); ?>",
	shopType: "magento",
	contextAddress: "https://sizeme.greitco.com",
	gaTrackingId: "UA-40735596-2"
};
//]]>
</script>

<link rel="stylesheet" type="text/css" href="//test.sizeme.com/3.0/sizeme-styles.css" />
<script type="text/javascript" src="//test.sizeme.com/3.0/sizeme-manifest.js"></script>
<script type="text/javascript" src="//test.sizeme.com/3.0/sizeme-vendor.js"></script>
<script type="text/javascript" src="//test.sizeme.com/3.0/sizeme.js"></script>

<script type="text/javascript">
//<![CDATA[
<?php

	// UI OPTIONS
	$uiOptions = $this->helper('sizeme_measurements')->getUiOptionsArray();
	
	$allSizeMeOptions = array(
							'appendContentTo' => 'append_content_to',
							'appendSplashTo' => 'append_splash_to',
							'sizeSelectionElement' => 'size_selection_element',
							'invokeElement' => 'invoke_element',
							'invokeEvent' => 'invoke_event',							
							'addToCartElement' => 'add_to_cart_element',
							'addToCartEvent' => 'add_to_cart_event',
							'lang' => 'lang_override',
						);
						
	foreach($allSizeMeOptions as $key => $value) {
		// write all non-empty fields to override platform specific default values defined in standard js
		if (trim($uiOptions[$value])) echo 'SizeMe.UI.options.'.$key.' = "'.$this->jsQuoteEscape(trim($uiOptions[$value])).'";'.PHP_EOL;
	}

	// possible first recommendation value override
	$value = 'first_recommendation';
	if (trim($uiOptions[$value])) {
		$write_value = trim(strtolower($uiOptions[$value]));
		$allowed_values = array('true', '1', 'false', '0');
		if (in_array($write_value, $allowed_values)) echo 'SizeMe.UI.options.firstRecommendation = '.$write_value.';'.PHP_EOL;	
	}
	
	// SWATCHES
	$product = $this->getProduct();	
	$swatch_attributes = $this->helper('sizeme_measurements')->getSwatchAttributes($product);

	if ($swatch_attributes) {
		echo 'SizeMe.UI.options.sizeSelectionElement = "select#attribute'.reset($swatch_attributes).'";'.PHP_EOL;
		echo 'SizeMe.UI.options.invokeElement = "a.swatch-link";'.PHP_EOL;
		echo 'SizeMe.UI.options.invokeEvent = "click";'.PHP_EOL;
		echo 'SizeMe.UI.options.firstRecommendation = false;'.PHP_EOL;
	}
?>	
//]]>
</script>

<?php
// write possible custom css
if (trim($uiOptions['custom_css'])) echo '<style type="text/css">'.$this->jsQuoteEscape(trim($uiOptions['custom_css'])).'</style>'.PHP_EOL;

?>