<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category  SizeMe
 * @package   SizeMe_Measurements
 * @author    SizeMe Ltd <magento@sizeme.com>
 * @copyright Copyright (c) 2015 SizeMe Ltd (http://www.sizeme.com/)
 * @license   http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
?>

<?php
/**
 * @var $this SizeMe_Measurements_Block_Head
 */

$uiOptions = $this->helper('sizeme_measurements')->getUiOptionsArray();
?>

<link rel="stylesheet" type="text/css" href="//sizeme.com/2.2/css/sizeme-magento.min.css" />
<script type="text/javascript" src="//sizeme.com/2.2/js/sizeme-magento.min.js"></script>

<script type="text/javascript">
    //<![CDATA[
    var sizeme_options = {
        service_status: "<?php echo $this->jsQuoteEscape($this->getServiceStatus()); ?>",
        buttonize: "<?php echo $this->jsQuoteEscape($this->getCustomSizeSelection()); ?>"
    };
	
<?php

	$allSizeMeOptions = array(
							'appendContentTo' => 'append_content_to',
							'appendSplashTo' => 'append_splash_to',
							'sizeSelectionElement' => 'size_selection_element',
							'addToCartElement' => 'add_to_cart_element',
							'addToCartEvent' => 'add_to_cart_event',
							'firstRecommendation' => 'first_recommendation',
							'lang' => 'lang_override',
						);
						
	foreach($allSizeMeOptions as $key => $value) {
		// write all non-empty fields to override platform specific default values defined in standard js
		if (trim($uiOptions[$value])) echo $key.': "'.$this->jsQuoteEscape(trim($uiOptions[$value])).'";'.PHP_EOL;
	}
	
?>	
    //]]>
</script>
